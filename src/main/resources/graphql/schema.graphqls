type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  product(id: ID!): Product
  products(first: Int, after: String, last: Int, before: String): ProductConnection
}

type Mutation {
  addProduct(input: ProductInput!): Product
  login(username: String!, password: String!): AccessToken
}

interface Node {
  "Global ID"
  id: ID!
}

type Product implements Node {
  id: ID!
  title: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String
  mediaUrl: [URL]
  # Do not expose createdBy and updatedBy
}

type AccessToken {
  access_token: String!
  token_type: String!
  expires_in: Int!
  refresh_token: String!
  scope: String
}

input ProductInput {
  title: String!
  description: String
  mediaUrl: [URL]
}

schema {
  query: Query
  mutation: Mutation
}

"""
An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.
"""
scalar URL
  @specifiedBy(url:
    "https://www.w3.org/Addressing/URL/url-spec.txt"
  )

"Represents a date with time(zone)."
scalar DateTime
  @specifiedBy(url:
    "https://scalars.graphql.org/andimarek/date-time.html"
)
